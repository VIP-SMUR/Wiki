{"config":{"lang":["en"],"separator":"[\\s\\u200b\\-_,:!=\\[\\]()\"`/]+|\\.(?!\\d)|&[lg]t;|(?!\\b)(?=[A-Z][a-z])","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Getting started","text":"<p>Welcome to the project page of the [VIP] team Surrogate Modeling for Urban Regeneration at Georgia Tech. This course is led by Dr. Patrick Kastner, head of the Sustainable Urban Systems Lab.</p>"},{"location":"#the-problem","title":"\ud83d\udcdd The Problem","text":"<p>Sustainability critics argue that the concept merely maintains the status quo rather than fostering true regeneration. This research course challenges this view by developing software tools that go beyond environmental and economic concerns to regenerate urban systems with a focus of empowering the community and decision-makers themselves. </p> <p>Our models will help strengthen urban decision-making, enabling real-time testing of interventions. By involving all stakeholders, we make regenerative cities tangible, actionable, and inclusive. Our work will address:</p> <ul> <li>Air quality / pollution / natural ventilation potential </li> <li>Microclimate assessment (outdoor thermal comfort, heat islands)</li> <li>Flood, stormwater / water runoff </li> <li>Mobility / walkability / transportation </li> <li>Global warming / climate change (heat waves) </li> <li>Urban decarbonization</li> <li>Urban building energy / district energy </li> <li>Environmental justice  </li> </ul>"},{"location":"#goals","title":"\ud83c\udfaf Goals","text":"<p>Conventional environmental simulation approaches in urban design are time-consuming and often incompatible with the fast-paced decision-making processes. This project aims to revolutionize this outdated paradigm by developing surrogate models that accelerate simulations (typically via machine learning), thereby offering real-time feedback to urban decision-makers, such as architects, urban designers, and policymakers.  Our goal is to seamlessly integrate sustainability considerations into every step of urban decision-making processes by integrating our models with industry-standard CAD tools such as <code>Rhino</code> and <code>Revit</code> and others.</p>"},{"location":"#preferred-interests-and-preparation","title":"\ud83d\udccc Preferred Interests and Preparation","text":"<p>We seek an interdisciplinary team of highly motivated students. Experience with <code>Python/C#</code>, <code>machine learning</code> and <code>simulation modeling</code> will be advantageous. We plan to form teams that consist of:</p> <ul> <li>Computer Science / Engineering (Civil, Environmental, Electrical) </li> <li>(Applied) Industrial and Systems Engineering</li> <li>Architecture &amp; Urban Design</li> <li>Public Policy</li> </ul>"},{"location":"#project-overview","title":"\ud83d\udcca Project Overview","text":"<ul> <li>Mobility<ul> <li>Pedestrian flows</li> <li>Urban accessibility</li> </ul> </li> <li>Microclimate<ul> <li>Heat island effect</li> <li>Urban cooling strategies</li> </ul> </li> <li>Energy in Buildings<ul> <li>Rapid prediction of building energy demand</li> <li>Urban building energy modeling (UBEM)</li> </ul> </li> </ul>"},{"location":"get-involved/","title":"\ud83e\udd1d Get Involved","text":"<p>Join our team and make a lasting impact on urban environments!</p> <p>GT Sign Up \u2014 SMUR | Learn More (undergraduate) | Learn More (graduate) | Contact Us</p>"},{"location":"get-involved/#project-wiki","title":"\ud83d\udcc4 Project Wiki","text":"<p>Link to current and previous projects</p>"},{"location":"projects/","title":"Project Repository","text":""},{"location":"projects/#semester-overview","title":"Semester Overview","text":"<ul> <li> <p> Fall 2024</p> <p> Learn more</p> </li> <li> <p> Spring 2024</p> <p> Learn more</p> </li> </ul>"},{"location":"projects/24fa/","title":"Project Repository","text":""},{"location":"projects/24fa/#fall-2024","title":"Fall 2024","text":"<ul> <li> <p> Neuroarchitecture</p> <p>Explores the intersection of neuroscience and architecture to create brain-friendly built environments.</p> <p> Learn more</p> </li> <li> <p> MPONC</p> <p>Multi-Parameter Optimization for Neighborhood Challenges: A comprehensive approach to urban planning.</p> <p> Learn more</p> </li> <li> <p> Energy Consumption in Commercial Buildings</p> <p>Analyzes and optimizes energy usage patterns in commercial structures.</p> <p> Learn more</p> </li> <li> <p> Residential Energy Efficiency</p> <p>Focuses on improving energy efficiency in residential buildings through innovative solutions.</p> <p> Learn more</p> </li> <li> <p> Urban Weather Generator (UWG)</p> <p>Continues work on modeling the urban heat island effect using EnergyPlus (.epw) weather files.</p> <p> Learn more</p> </li> <li> <p> Urban Microclimate Framework (UMCF)</p> <p>Develops a comprehensive framework for understanding and managing urban microclimates.</p> <p> Learn more</p> </li> <li> <p> Pedestrian Environment Index (PEI)</p> <p>Furthers the development of the PEI methodology, a composite measure of walkability using key subindices.</p> <p> Learn more</p> </li> </ul>"},{"location":"projects/24sp/","title":"Project Repository","text":""},{"location":"projects/24sp/#spring-2024","title":"Spring 2024","text":"<ul> <li> <p> Pedestrian Environment Index (PEI)</p> <p>Implements the PEI methodology, a composite measure of walkability using four key subindices.</p> <p> Learn more</p> </li> <li> <p> Segregation in the 15-Minute City</p> <p>Investigates segregation on a basis of mobility within the context of a 15-minute city.</p> <p> Learn more</p> </li> <li> <p> Urban Weather Generator (UWG)</p> <p>Models the urban heat island effect using EnergyPlus (.epw) weather files.</p> <p> Learn more</p> </li> <li> <p> Multivariate Regression of Energy Consumption</p> <p>Uses machine learning models to optimize building design parameters for energy consumption.</p> <p> Learn more</p> </li> </ul>"},{"location":"teams/students/","title":"Team members","text":""},{"location":"teams/students/#fall-2024","title":"Fall 2024","text":"Name Seniority Major Department GitHub Handle Topic Area Yilun Zha PhD Planning/Urban Design ARCH elonncha Mobility-PEI Joseph M. Aerathu Masters Architecture ARCH jma1999 Energy-In-Buildings-Com Matthew Lim Sophomore Computer Science COC mlim70 MPONC Marcelo Alvarez Masters Architecture ARCH alvarezdmarch Microclimate-UMCF Changda Ma Masters Architecture ARCH changdama Neuroarchitecture Anubha Mahajan Senior Computer Science COC amahajan68 Energy-In-Buildings-Com Jessica Hernandez Senior Computer Science COC jhernandez312 Energy-In-Buildings-Com C. \"Albert\" Le Sophomore Computer Engineering ECE balbertle Mobility-PEI Misha Lee Sophomore Civil Engineering CEE memesha Neuroarchitecture Reyli Olivo Junior Civil Engineering CEE Rolivo05 MPONC Sharmista Debnath Masters Architecture (HBP) ARCH Myshx Energy-In-Buildings-Res Kiana Layam Masters Architecture (HBP) ARCH kkvlayam Energy-In-Buildings-Res Han-Syun Shih Masters Architecture (HBP) ARCH hshih38 Energy-In-Buildings-Com Sofia Mujica Junior Mechanical Engineering ME sofia-mujica Microclimate-UWG L. Q. Nhu Nguyen Masters Architecture ARCH qnguyen322 Neuroarchitecture Abigail Herbas Junior Computer Science COC aherbas3 Microclimate-UWG Chunlan Wang Masters Architecture (DC) ARCH wang-123-xi Mobility-PEI Gonzalo Vegas PhD Architecture ARCH gvegasol Microclimate-UMCF Yichao Shi PhD Architecture ARCH SHIyichao98 Mobility-PEI Jiayi Li Junior Architecture ARCH jli3307 Energy-In-Buildings-Res Shruti Jadhav Masters Architecture (HBP) ARCH ShrutiJadhav27 Microclimate-UMCF Shivam Patel Senior Computer Science COC FlippyShivam Energy-In-Buildings-Res Atharva Beesen Junior Computer Science COC AtharvaBeesen Mobility-PEI Ze Yu Jiang Junior Computer Science COC zeyujiang8800 Microclimate-UWG Devam Mondal Junior Computer Science COC Dodesimo MPONC Rui Shen Masters Architecture (DC) ARCH ShiRo-25 Microclimate-UMCF Krish Gupta Junior Civil Engineering CEE krishgupta-CE Microclimate-UWG Thanasarn Changnawa PhD Architecture ARCH Thanasarn-Changnawa Microclimate-UWG Chinmay Rothe Masters Architecture (HPB) ARCH ChinmayR5 Microclimate-UMCF Hang Xu PhD Architecture ARCH HangXXXu Energy-In-Buildings Parya Monjezi Masters Architecture ARCH Pmonjezi3 Neuroarchitecture"},{"location":"teams/students/#spring-2024","title":"Spring 2024","text":"Name Seniority Major Department GitHub Topic Area Neha Nakirikanti Sophomore Computer Science COC nehanak Mobility-1 Vishal Maradana Senior Computer Science COC vishal-337 Mobility-1 Joshua R Cohen Junior Civil Engineering CEE paradoxwalk Mobility-1 Abigail Herbas Sophomore Computer Science COC aherbas3 Energy-In-Buildings Anubha Mahajan Junior Computer Science COC amahajan68 Energy-In-Buildings Aarit Gupta Sophomore Mechanical Engineering ME aaritg Energy-In-Buildings Shivam Patel Junior Computer Science COC FlippyShivam Energy-In-Buildings Maryam Almaian Masters Architecture (HPB) ARCH maryamalmaian Microclimate Sofia A Mujica Sophomore Mechanical Engineering ME sofia-mujica Microclimate Ze Yu Jiang Sophomore Computer Science COC zeyujiang8800 Microclimate Gonzalo Vegas Ph.D. Architecture ARCH gvegasol Mobility-2 Parker Bredice Sophomore Mechanical Engineering ME parkerbredice Mobility-2 Thien-An Dang Senior Industrial Engineering ISYE tdang66 Mobility-2 Sahil Handa Junior Computer Engineering ECE handasahil Mobility-2 Silvia Vangelova Masters ISYE ISYE xtearas Sp24"},{"location":"24fa-mponc/","title":"24Fa-MPONC","text":"<p>Modeling Processes of Neighborhood Change</p>"},{"location":"24fa-mponc/#reference-paper","title":"Reference paper","text":"<p>https://arxiv.org/abs/2401.03307</p>"},{"location":"24fa-mponc/#code","title":"Code","text":"<p>https://github.com/jcmartinezmori/modeling_processes_of_neighborhood_change</p>"},{"location":"24fa-neuroarchitecture/","title":"24Fa-Neuroarchitecture","text":""},{"location":"24fa-neuroarchitecture/#week-1","title":"Week 1","text":"<p>Introduction to Topic * Dr. Haas and Dr. Kastner will introduce the topic to the team.  * Dr. Kastner will go over the organizational/administrative aspects of the topic and ensure the students have the resources they need to be successful.</p> <p>Task: * Students should familiarize themselves with the organizational structure and various platforms used for the project * Students should fill in their first summary for the week on Github. * Please have a look at the first two papers that were uploaded to Zotero.    + \u201cNeuroarchitecture: How the Perception of Our Surroundings Impacts the Brain\u201d   + \u201cDesigning for human wellbeing: The integration of neuroarchitecture in design \u2013 A systematic review\u201d</p>"},{"location":"24fa-neuroarchitecture/#week-2","title":"Week 2","text":""},{"location":"24fa-neuroarchitecture/#overview","title":"Overview","text":"<p>This week, you will be introduced to the process underlying literature reviews. You will learn about different types of literature reviews, explore various publication database platforms, and begin using Zotero and Covidence for managing your research.</p>"},{"location":"24fa-neuroarchitecture/#1-introduction-to-literature-reviews","title":"1. Introduction to Literature Reviews","text":""},{"location":"24fa-neuroarchitecture/#tasks","title":"Tasks:","text":"<ol> <li> <p>Read this article that outlines the literature review process: SLR-1.pdf</p> </li> <li> <p>Research different types of literature reviews. Which type would be most appropriate for our research on Neuroarchitecture based on your initial literature search?</p> </li> <li> <p>Hint: Refer to Types of Review Explained</p> </li> <li> <p>Develop search terms related to the review we want to conduct on Neuroarchitecture.</p> </li> </ol>"},{"location":"24fa-neuroarchitecture/#2-publication-database-platforms","title":"2. Publication Database Platforms","text":""},{"location":"24fa-neuroarchitecture/#available-search-engines","title":"Available Search Engines:","text":"<ul> <li>Google Scholar: https://scholar.google.com/</li> <li>Scopus: https://www.scopus.com/search/form.uri?display=basic#basic</li> <li>Web of Science: https://www.webofscience.com/wos/woscc/basic-search</li> <li>PubMed: https://pubmed.ncbi.nlm.nih.gov/</li> <li>MEDLINE: https://www.medline.com/</li> <li>PsycINFO: https://psycnet.apa.org/search</li> <li>World Health Organization: https://www.who.int/data/collections</li> <li>ClinicalTrials.gov</li> <li>Embase</li> <li>CINAHL</li> <li>Central</li> </ul> <p>Note: Dr. Kastner can help determine which platforms you have access to via GT.</p>"},{"location":"24fa-neuroarchitecture/#tasks_1","title":"Tasks:","text":"<ol> <li>Identify which platforms are most relevant for our research question based on the topics they cover.</li> <li>Describe the types of studies/information that each of these platforms covers.</li> <li>Conduct an initial search for literature related to Neuroarchitecture using these platforms.</li> </ol>"},{"location":"24fa-neuroarchitecture/#3-reference-management-with-zotero","title":"3. Reference Management with Zotero","text":""},{"location":"24fa-neuroarchitecture/#task","title":"Task:","text":"<ol> <li>Add any relevant papers you find during your initial search to Zotero.</li> <li>Instructions for adding Zotero to your browser: https://www.zotero.org/start</li> </ol>"},{"location":"24fa-neuroarchitecture/#4-introduction-to-covidence","title":"4. Introduction to Covidence","text":"<p>Covidence is the platform we will use for conducting the literature review. You should have received an invite with access to Covidence. Please check your emails. Website: https://www.covidence.org/</p>"},{"location":"24fa-neuroarchitecture/#tasks_2","title":"Tasks:","text":"<ol> <li>Explore the Covidence website and answer the following questions:</li> <li>What is Covidence?</li> <li> <p>Why should we use Covidence? What are some advantages of using this software?</p> </li> <li> <p>Watch the introductory video: Covidence 101</p> </li> <li> <p>Create a brief summary (can be bullet points) of:</p> </li> <li>Key takeaways from the presentation</li> <li>Main features of the Covidence platform</li> </ol> <p>Remember to reach out if you have any questions or need clarification on any of these tasks. Good luck with your literature review introduction!</p>"},{"location":"24fa-neuroarchitecture/#week-3","title":"Week 3","text":""},{"location":"24fa-neuroarchitecture/#selected-terms-and-interests-sheet-link","title":"\u201cSelected Terms and Interests\u201d sheet link:","text":"<p>https://docs.google.com/spreadsheets/d/1Ar8k-nHM90nMEkVCGbAnnRmavNA04EUhwsxx_65Q8bw/edit?usp=sharing</p>"},{"location":"24fa-neuroarchitecture/#mind-maps-for-week1-two-papers-link","title":"Mind Maps for Week1 two papers link:","text":"<p>https://www.dropbox.com/scl/fi/i29ewpvguair5u1yzcs83/Mind-Map-2<sup>nd</sup>-paper.pdf?rlkey=djwznxfz3bl77q5y0kmdcoqa4&amp;st=xob81uf4&amp;dl=0</p>"},{"location":"24fa-energyinbuildings-res/","title":"24Fa-EnergyInBuildings-Res","text":"<p>Energy in Buildings - Residential</p>"},{"location":"24fa-energyinbuildings-com/","title":"24Fa-EnergyInBuildings-Com","text":"<p>Energy in Buildings - Commercial</p>"},{"location":"24fa-microclimate-uwg/","title":"24Fa-Microclimate-UWG","text":"<p>Urban Weather Generator</p>"},{"location":"24fa-microclimate-umcf/","title":"24Fa-Microclimate-UMCF","text":"<p>urbanMicroClimateFOAM</p>"},{"location":"24fa-mobility-pei/","title":"24-Fa-Mobility-PEI","text":"<p>README.md</p>"},{"location":"24fa-mobility-pei/#pedestrian-environment-index-pei-implementation","title":"Pedestrian Environment Index (PEI) Implementation","text":"<p>This project implements the Pedestrian Environment Index (PEI) methodology as developed at the University of Illinois Chicago (see the research paper: https://www.sciencedirect.com/science/article/pii/S0966692314001343). The PEI provides a composite measure of the walkability of an environment, incorporating the following subindices:</p> <ul> <li>Population Density Index (PDI)</li> <li>Commercial Density Index (CDI)</li> <li>Intersection Density Index (IDI)</li> <li>Land-use Diversity Index (LDI)</li> </ul> <p>Motivation</p> <p>Understanding the walkability of an environment is important for urban planning, public health initiatives, and promoting active transportation. This implementation of the PEI can be used by researchers to:</p> <ul> <li>Assess the current walkability of neighborhoods or regions</li> <li>Compare walkability across different areas</li> <li>Identify areas with potential for improvement</li> </ul> <p>Getting Started</p> <ul> <li>Prerequisites:</li> <li>Python 3.x </li> <li>Libraries:         * osmnx         * pandas         * numpy         * matplotlib.pyplot         * csv         * census</li> <li>Census API Key: Can be found at: https://api.census.gov/data/key_signup.html. Must paste key in text file titled census_api_key.txt in the same directory as PDI_generator.ipynb to access population data.</li> </ul> <p>Installation</p> <p>You can install the required libraries using pip:</p> <pre><code>pip install osmnx pandas numpy matplotlib csv census\n</code></pre> <ul> <li>Usage: </li> </ul> <p>Contributing</p> <p>License</p> <p>Idk how licensing works... Just don't sell it I guess.</p>"},{"location":"24sp-energyinbuildings/","title":"Multivariate Regression of Energy Consumption","text":""},{"location":"24sp-energyinbuildings/#introduction","title":"Introduction","text":"<p>This notebook is part of the repository 'Optimization of Building Energy Consumption' aimed at using machine learning models to optimize building design parameters to minimize energy consumption for heating and cooling. This notebook focuses on multivariate regression to predict both heating and cooling energy loads based on building design parameters.</p>"},{"location":"24sp-energyinbuildings/#repository-overview","title":"Repository Overview","text":"<ul> <li>Repository: Optimization of Building Energy Consumption</li> <li>File: Notebook1B_Multivariate_regression_heating_cooling_load_final.ipynb</li> </ul>"},{"location":"24sp-energyinbuildings/#notebook-summary","title":"Notebook Summary","text":"<p>This notebook includes comprehensive steps for preprocessing, analyzing, and modeling building energy data with the goal of predicting heating and cooling loads. The process includes:</p> <ol> <li>Data loading and initial exploration.</li> <li>Descriptive statistics to understand the dataset.</li> <li>Data visualization to infer relationships and data distribution.</li> <li>Data cleaning and transformation to prepare for modeling.</li> <li>Model building using various machine learning techniques including Linear Regression, KNN, Support Vector Machine, and a neural network model using Keras.</li> <li>Evaluation of models using cross-validation and comparison based on mean squared error.</li> <li>Final model selection and saving the model for future use.</li> </ol>"},{"location":"24sp-energyinbuildings/#usage","title":"Usage","text":"<p>The notebook is structured to be followed sequentially. Detailed comments and markdown notes provide guidance through each step of the analysis and modeling process.</p>"},{"location":"24sp-energyinbuildings/#models-and-algorithms-used","title":"Models and Algorithms Used","text":"<ul> <li>Linear Regression</li> <li>Random Forest</li> <li>KNN (K-Nearest Neighbors)</li> <li>Support Vector Machine (SVM)</li> <li>Neural Networks (Keras Sequential Model)</li> </ul> <p>The notebook also discusses the use of early stopping in neural network training to prevent overfitting and improve model generalization.</p>"},{"location":"24sp-energyinbuildings/#data-description","title":"Data Description","text":"<p>The dataset used (<code>EPB_data.csv</code>) includes various building parameters such as orientation, area, and glazing area among others, and the target variables are 'Heating Load' and 'Cooling Load'.</p>"},{"location":"24sp-energyinbuildings/#key-findings-and-observations","title":"Key Findings and Observations","text":"<ul> <li>Multivariate regression can effectively predict energy consumption when appropriate preprocessing and feature engineering are applied.</li> <li>The Random Forest algorithm showed superior performance in predicting the energy loads compared to other models.</li> <li>Neural Networks provided competitive results, highlighting their potential in complex regression tasks.</li> </ul>"},{"location":"24sp-energyinbuildings/#conclusions","title":"Conclusions","text":"<p>This notebook serves as a detailed example of using statistical and machine learning methods to predict building energy consumption. The methodologies outlined here can be adapted and expanded for other types of predictive modeling tasks within the building energy domain.</p>"},{"location":"24sp-energyinbuildings/#references","title":"References","text":"<ul> <li>Tsanas, A. and Xifara, A. (2012). Accurate quantitative estimation of energy performance of residential buildings using statistical machine learning tools. Energy and Buildings, 49, 560-567. DOI: 10.1016/j.enbuild.2012.03.003</li> </ul>"},{"location":"24sp-energyinbuildings/#demand-ninja-energy-demand-forecasting-model","title":"Demand Ninja - Energy Demand Forecasting Model","text":""},{"location":"24sp-energyinbuildings/#overview","title":"Overview","text":"<p>Demand Ninja is a sophisticated tool that provides hourly energy demand forecasts based on environmental data and building characteristics. It employs advanced algorithms and machine learning techniques to predict heating and cooling needs with high accuracy.</p>"},{"location":"24sp-energyinbuildings/#repository-structure","title":"Repository Structure","text":"<p>The repository consists of several Python scripts each designed to perform specific roles in the data processing and forecasting pipeline:</p>"},{"location":"24sp-energyinbuildings/#core-scripts","title":"Core Scripts","text":"<ul> <li><code>core.py</code>: Contains the primary logic for calculating energy demands based on the Building-Adjusted Internal Temperature (BAIT) model.</li> <li><code>demand_ninja_example.py</code>: Demonstrates how to use the Demand Ninja model to compute energy demand using custom input data.</li> <li><code>geo_json_file.py</code>: Converts processed energy demand data into GeoJSON format for easy integration with geospatial applications.</li> <li><code>test_download.py</code>: Automates the downloading of EPW files for various locations using API calls.</li> <li><code>epw_to_dataframe.py</code>: Consolidates key weather parameters from multiple EPW files into a single CSV file for easier analysis.</li> <li><code>clean_weather_with_demand.py</code>: Cleans and preprocesses weather data combined with demand forecasts to prepare for analysis.</li> <li><code>aggregate_data.py</code>: Processes and aggregates weather and energy demand data by geographic coordinates.</li> </ul>"},{"location":"24sp-energyinbuildings/#features","title":"Features","text":"<ul> <li>Energy Demand Forecasting: Utilize historical weather data and building parameters to forecast energy needs.</li> <li>Data Enrichment: Enhance your datasets with calculated energy demand metrics to aid in further analyses or model training.</li> <li>GeoJSON Conversion: Export your enriched datasets to GeoJSON for use in mapping and other geospatial applications.</li> <li>Automated Data Retrieval: Automatically download weather data required for demand calculations.</li> </ul>"},{"location":"24sp-energyinbuildings/#getting-started","title":"Getting Started","text":"<p>To start using the Demand Ninja scripts, follow these steps:</p> <ol> <li>Clone the repository to your local machine.</li> <li>Ensure that all dependencies are installed via <code>pip install -r requirements.txt</code> (ensure you have this file configured based on the scripts needs).</li> <li>Run the scripts individually as needed:</li> </ol> <pre><code>python demand_ninja_example.py\npython clean_weather_with_demand.py\npython geo_json_file.py\n</code></pre>"},{"location":"24sp-energyinbuildings/#data-requirements","title":"Data Requirements","text":"<p>Each script is designed to be modular but certain data standards must be maintained for seamless functionality:</p> <ul> <li>Weather data should include key metrics like temperature, humidity, wind speed, and radiation levels.</li> </ul>"},{"location":"24sp-energyinbuildings/#credits","title":"Credits","text":"<p>Demand Ninja was developed by the Renewables Ninja team, including notable contributions from Iain Staffell, Stefan Pfenninger, and Nathan Johnson.</p>"},{"location":"24sp-energyinbuildings/#rank-5-of-ashrae-great-energy-predictor-iii-gepiii","title":"Rank 5 of ASHRAE Great Energy Predictor III (GEPIII)","text":""},{"location":"24sp-energyinbuildings/#overview_1","title":"Overview","text":"<p>We refer to \"rank 5\" as the 5<sup>th</sup> winning solution of the ASHRAE Great Energy Predictor III (GEPIII) contest which is hosted on Kaggle. We originally were working on 'rank 1', or the highets ranked solution but decided to first go through 'rank 5' as it had a much quicker time to complete with not as much difference compared to 'rank 1'. Accorrding to ASHRAE, \"This competition's overall objective was to find the most accurate modeling solutions for the prediction of over 41 million private and public test data points.\" There are many models within the solutions, with many libraries and a need to run on a very, very fast computers. We used GaTech's PACE system to run these jobs. </p>"},{"location":"24sp-energyinbuildings/#rank-5-github-tutorial","title":"Rank 5 GitHub Tutorial","text":"<ul> <li>Rank 5 Kaggle Documentation</li> <li>Rank 5 Github Walkthrough</li> </ul>"},{"location":"24sp-energyinbuildings/#directory-structure","title":"Directory Structure","text":"<ul> <li><code>model</code>: - trained model binary files</li> <li><code>output</code>: - model predictions and the final submission file</li> <li><code>train_code</code>: - code to train models from scratch</li> <li><code>predict_code</code>: - code to generate predictions from model binaries</li> <li><code>ensemble_code</code>: - code to ensemble the predictions</li> <li><code>preproceeding_code</code>: - code to pre-process the data</li> <li><code>prepare_data</code>: - pre-processed data files</li> <li><code>external_data</code>: - external files required by this solution such as leak data</li> <li><code>requirements.txt</code>: - python package dependencies</li> <li><code>SETTINGS.json</code>: - a json configuration file</li> </ul>"},{"location":"24sp-energyinbuildings/#issues-with-rank-5","title":"Issues with Rank 5","text":"<p>There were many issues running Rank 5, here are some of them and possible solutions:</p> <ol> <li>When running on PACE, using sudo is not allowed without special permissions. Hence getting git installed would be hard to do. Instead for ease, just download the files and use PACE ICE onDemand and upload the files onto the instance machine directly, without using git.</li> <li>The requirements file has a LOT of libraries, many which are outdated and will give compilation errors. You will have to see which ones would work, and whenever an error occurs pip install seperatley and keep running the file. This is tedious. An issue that isnt resolved yet is the complilation problems with the Cython libraries with pandas and others.</li> <li>The GitHub will ask to make a virtual environment using myenv. In PACE you should use Ananconda, which comes along with it.</li> <li>Kaggle API is a bit different with the outdated version of this Kaggle competition. Ther emay be multiple times where you have to uninstall kaggle and reinstall it. Scroll down here. Issues occurs where the files for Kaggle are not aligned with the process of getting training data. So you would have to download the training data and upload it onto PACE.</li> <li>There was an issue uploading the training files onto PACE, as it keeps giving an error that it cant upload half of the files. Will have to figure this one out later.</li> </ol>"},{"location":"24sp-microclimate/","title":"Urban Microclimate using the Urban Weather Generator","text":"<p>The Urban Weather Generator models the urban heat island using EnergyPlus (.epw) weather files. The Python model utilizes various parameters to reflect urban canyon conditions.</p>"},{"location":"24sp-microclimate/#introduction","title":"Introduction","text":"<p>This notebook is a documentation for the urban microclimate sub-team progress and outcomes.</p>"},{"location":"24sp-microclimate/#notebook-summary","title":"Notebook Summary","text":"<p>This notebook includes steps, process, and issues related to using the Urban Weather Generator (UWG) to have quick urban microclimate results. Below are the summarized steps of the process:</p> <ol> <li>Test run the UWG script using a selected .epw file retrieved from https://climate.onebuilding.org/.</li> <li>Perform sensitivity analysis test to select the most affective UWG inputs.</li> <li>Collect the exact values for the selected inputs in the selected .epw file location (Using Grasshopper script).</li> <li>Run the UWG with the correct inputs.</li> <li>Compare the UWG .epw results with the initial .epw file.</li> </ol>"},{"location":"24sp-microclimate/#usage","title":"Usage","text":"<p>The notebook is structured in chronological order, where each heading is a step and below the step are its issues and process.</p>"},{"location":"24sp-microclimate/#key-findings-and-observations","title":"Key Findings and Observations","text":"<ul> <li>The most affective inputs to be used in Atlanta, GA are: min wind speed, avg bldg height, veg start/end month, vert horiz ratio, rural avg obstacle height, albedo of veg, and sens anthro heat.</li> </ul>"},{"location":"24sp-microclimate/#steps","title":"Steps","text":""},{"location":"24sp-microclimate/#1-test-run-the-uwg","title":"1. Test Run the UWG","text":"<ul> <li>Clone the repository of the MIT UWG GitHub, and follow the instructions listed there. Test with the provided Singapore EPW file or download another one of your choice.</li> </ul>"},{"location":"24sp-microclimate/#getting-started","title":"Getting Started","text":"<ol> <li>Clone repository to local machine:</li> </ol> <p><pre><code>git clone https://github.com/ladybug-tools/uwg\n</code></pre> 2. Install dependencies:</p> <p><pre><code>cd uwg\npip install -r dev-requirements.txt\npip install -r requirements.txt\n</code></pre> 3. Run the scripts individually as needed.</p>"},{"location":"24sp-microclimate/#issues","title":"Issues","text":"<ul> <li>There are over 60 parameters available for testing, however, the documentation does not provide an accurate measure of the range for input, and so it must be tested out manually. </li> <li>The outputted EPW file requires a bit of cleaning, as the values of the vectors are shifted one to the left.</li> </ul>"},{"location":"24sp-microclimate/#2-sensitivity-analysis","title":"2. Sensitivity Analysis","text":""},{"location":"24sp-microclimate/#process","title":"Process","text":"<p>For the Sobol sensitivity analysis, we define an objective function that takes in our parameters to measure the correlation coefficient and covariance. In this case, we went with measuring the RMSE value to simulated dry bulb temperature to the canyon temperature of the Georgia Tech Campus. Due to the design of the function, the more that the values differ from the actual, the more it would penalize the performance, leading to more accurate outputs. Within our final plotting, we see that our data tends to be normally distributed, which further supports the accuracy of the sensitivity analysis.</p>"},{"location":"24sp-microclimate/#issues_1","title":"Issues","text":"<ul> <li>A chance for bias within dataset: Sobol sensitivity analysis generates a fixed amount of samples for a determined number of inputs. However, due to the combination restriction of the parameters (building density, tree cover, and grass cover), the sum of these three parameters must add up to less than or equal to 1.0. Because of this, we've decided to randomize each of the data views such that the sum of the three values meet this criteria. This may lead to bias as each of the samples have a set determined number of homogenous outputs.</li> <li>Due to the large test size of our samples (100,000), we resorted to using the campus HPC cluster to quickly receive the simulation output of the sensitivity analysis.</li> </ul>"},{"location":"24sp-microclimate/#3-data-collection","title":"3. Data Collection","text":""},{"location":"24sp-microclimate/#process_1","title":"Process","text":"<ul> <li>A Grasshopper script was developed to collect the data based on the OSM coordinates of the 125m tile.</li> <li>The coordinates of the tile are inputted manually in GH to modify the bounding box and get the data of the specific lot.</li> <li>Ladybug in GH is used to get the wind speed.</li> <li>The spatial references of the trees cover, grass cover, buildings, and vert horiz ratio has been utilized to find the percentage of the parameters.</li> <li>Map Tiler: This tool allows us to input a specific geographic location and allows us to adjust the zoom level fitting to our region of interest within a bounding box. Then, it allows us to evenly partition the region into subsets of maps, all of which contain coordinates that can later be utilized within the Rhino 3D tool to fetch the data specific to that subset of our region of interest, which we would apply to the UWG to output simulations of more specific parts of the campus.</li> </ul>"},{"location":"24sp-microclimate/#issuesnotes","title":"Issues/Notes","text":"<ul> <li>Map tiler uses Mercator tiling approach. Web Mercator projection using unique sets of coordinates to input the coordinates of each tile in the location in GH.</li> <li>Building heights are retrieved from FEMA.</li> <li>LiDAR is used to find the building height to area ratio.</li> <li>To avoid any issues, toggle the true or false instantly after getting each result or when making any changes.</li> <li>Due to .gh files, we are unable to simulate the campus into sufficiently small math tiles. Thus, we resorted to using the average values of the inputs parameters on the entire Georgia Tech campus. Many of these inputs, although impactful, were not easy to fetch data for. Examples include HVAC coefficient, urban boundary layer, and vegetation albedo coefficient.</li> <li>Upon retrieving the data from Rhino, input it into the parameters of the UWG parameter function, and adjust it accordingly for each part of the subset map tiles. For each of the outputted EPW file, utilize Grasshopper tool, or geopandas with a geojson file of campus, to display the diurnal, monthly, and yearly averages across each subset, forming a complete heat map.</li> </ul>"},{"location":"24sp-microclimate/#4-run-accurate-uwg","title":"4. Run Accurate UWG","text":""},{"location":"24sp-microclimate/#process_2","title":"Process","text":"<p>To run the UWG tool:</p> <ol> <li>Clone this directory and install the required dependencies. </li> <li>Make sure to have your desired location's EPW file in the directory. </li> <li>Each of the parameters have a specific range for their values of input, which can be viewed within the Parameters.py file. </li> <li>Upon running, the UWG will start simulating the desired parameter/conditions onto the location of the EPW file, and will output a new simulated EPW.</li> </ol>"},{"location":"24sp-microclimate/#5-useful-tool","title":"5. Useful Tool","text":""},{"location":"24sp-microclimate/#gt-pace-ice-cluster","title":"GT PACE ICE Cluster","text":"<p>PACE's Instructional Cluster Environment (ICE) offers an educational environment with opportunities to gain scientific computing experience.</p> <p>To access:</p> <ol> <li>Navigate to terminal and enter: <code>ssh gburdell3@login-ice.pace.gatech.edu</code></li> <li>Enter GT password at prompt </li> </ol>"},{"location":"24sp-microclimate/#references","title":"References","text":"<ol> <li> <p>Mao, J., Norford, L.K. (2021). Urban Weather Generator: Physics-Based Microclimate Simulation for Performance-Oriented Urban Planning. In: Palme, M., Salvati, A. (eds) Urban Microclimate Modelling for Comfort and Energy Studies. Springer, Cham. https://doi.org/10.1007/978-3-030-65421-4_12</p> </li> <li> <p>Harnessing cooling from urban trees: Interconnecting background climates, urban morphology, and tree traits, EGUsphere [preprint], https://doi.org/10.5194/egusphere-2024-234, 2024.</p> </li> <li> <p>Bhatt MM, Gupta K, Danodia A, Chakroborty SD, Patel NR. Detailed urban roughness parametrization for anthropogenic heat flux estimation using earth observation data. Heliyon. 2023 Jul 17;9(7):e18361. doi: 10.1016/j.heliyon.2023.e18361. Erratum in: Heliyon. 2023 Sep 10;9(9):e19953. PMID: 37519678; PMCID: PMC10375860</p> </li> </ol>"},{"location":"24sp-microclimate/#gni-abstract","title":"GNI Abstract","text":"<p>https://github.com/kastnerp/Abstract-GNI-Symposium-Microclimate</p>"},{"location":"24sp-microclimate/#gni-data-processing","title":"GNI Data Processing","text":"<p>https://github.com/kastnerp/GNI-Microclimate-Paper</p>"},{"location":"24sp-mobility-1/","title":"Pedestrian Environment Index (PEI) Project Overview","text":""},{"location":"24sp-mobility-1/#introduction-and-overview","title":"Introduction and Overview","text":"<p>This project implements the Pedestrian Environment Index (PEI) methodology, a composite measure of walkability. It uses four key subindices:</p> <ul> <li>Population Density Index (PDI): Measures the density of residential population within a given area. Data for this index is derived from Census block groups  (PDI_generator.ipynb).</li> <li>Commercial Density Index (CDI): Calculates the density of commercial establishments in a Block Group, indicating the availability of destinations and services within walking distance (CDI_generator.ipynb).</li> <li>Intersection Density Index (IDI):  Measures the density of intersections within an area. Intersections can influence route options and pedestrian safety  (IDI_generator.ipynb).</li> <li>Land-use Diversity Index (LDI): Assesses the mix of different land-use types (e.g., residential, commercial, industrial) present. Diverse land uses often correspond with more walkable environments (LDI_generator.ipynb). </li> </ul>"},{"location":"24sp-mobility-1/#workflow","title":"Workflow","text":"<ol> <li>Subindex Calculation: Each Jupyter Notebook file (<code>*_generator.ipynb</code>) processes a Census block group shapefile to compute its respective subindex score. The output is saved as either a CSV or GeoJSON file.</li> <li>PEI Compilation:  The <code>PEI_generator.ipynb</code> notebook takes the outputs from the subindex generators and computes the final PEI score for each block group.</li> <li>Visualization:  The results are presented as a map, visualizing the PEI scores across census block groups.</li> </ol> <p>Note: To ensure consistency and ease of use, we are in the process of consolidating all output files into the GeoJSON format.</p>"},{"location":"24sp-mobility-1/#detailed-index-calculations-and-methodologies","title":"Detailed Index Calculations and Methodologies","text":""},{"location":"24sp-mobility-1/#commercial-density-index-cdi","title":"Commercial Density Index (CDI)","text":""},{"location":"24sp-mobility-1/#description","title":"Description","text":"<p>For this index, we gather the count of the different types of amenities in each block group. We then normalize the value by dividing each count by the greatest value for commercial density index within the region.</p>"},{"location":"24sp-mobility-1/#parameters","title":"Parameters","text":"<ul> <li>atl_bg.geojson: The data we are reading. This contains specific information about the neighborhood within Atlanta that we are researching. We will use OSMNx to calculate the quantity of each type of amenity.</li> </ul>"},{"location":"24sp-mobility-1/#amenities-tags-used","title":"Amenities &amp; Tags Used","text":"<ul> <li>Groceries: 'supermarket', 'convenience', 'grocery', 'food', 'organic'</li> <li>Restaurants: 'restaurant', 'cafe', 'food_court', 'bistro', 'fast_food'</li> <li>Banks: 'bank', 'atm'</li> <li>Schools: 'school', 'college', 'university', 'kindergarten', 'music_school', 'language_school', 'driving_school'</li> <li>Entertainment: 'cinema', 'theatre', 'nightclub', 'casino', 'arts_centre', 'sports_centre', 'stadium', 'amusement_arcade', 'dance', 'bowling_alley', 'attraction', 'theme_park', 'zoo'</li> <li>Parks: 'recreation_ground', 'grass', 'greenfield'</li> </ul>"},{"location":"24sp-mobility-1/#returns","title":"Returns","text":"<p>Value for the commercial density Index, normalized by the maximum commercial density within the area.</p>"},{"location":"24sp-mobility-1/#intersection-density-index-generator","title":"Intersection Density Index Generator","text":""},{"location":"24sp-mobility-1/#description_1","title":"Description","text":"<p>This Python script analyzes a GeoJSON file containing block group data, calculating the Intersection Density Index (IDI) for each block group. It outputs a CSV file detailing these IDI values, providing insights into intersection patterns within the analyzed area.</p>"},{"location":"24sp-mobility-1/#parameters_1","title":"Parameters","text":"<ul> <li>GeoJSON file: A GeoJSON file that must contain the block groups' geometries and the FIPS codes for the state and counties.</li> </ul>"},{"location":"24sp-mobility-1/#returns_1","title":"Returns","text":"<ul> <li>CSV file: A new csv file is created, which contains columns from the geojson file as well as additional values collected for each block utilized in the IDI computation.</li> <li><code>Polygon</code>: the geometry of each block group</li> <li><code>Area</code>: The area of the block group</li> <li><code>Intersection</code>: Sum of the roads connected to an intersection in a block group.</li> <li><code>IDI</code>: The IDI value which is normalized IDI value for all the blocks.</li> </ul>"},{"location":"24sp-mobility-1/#workflow_1","title":"Workflow","text":"<ol> <li>Reading GeoJSON data: Extracts the geometry of polygons from a file.</li> <li>Intersection Data Extraction: OSMNX is used to extract intersection data for a specified block.</li> <li>Equivalency Factor Calculation: The number of roads connecting each intersection in a polygon is determined, as is the total of the Equivalency factors of all intersections in a block.</li> <li>Population Density Calculation: Calculates IDI per block by dividing equivalency factor sums by respective areas. Normalize all IDIs.</li> <li>return file: generates a CSV with the data and IDI values required for creating visualizations in IDI_visualization.ipynb.</li> </ol>"},{"location":"24sp-mobility-1/#land-diversity-index-generator","title":"Land Diversity Index Generator","text":""},{"location":"24sp-mobility-1/#description_2","title":"Description","text":"<p>This Python script analyzes a GeoJSON file containing block group data, calculating the Land Diversity Index (LDI) for each block group. It outputs a CSV file detailing these LDI values, providing insights into diversity within the analyzed area.</p>"},{"location":"24sp-mobility-1/#parameters_2","title":"Parameters","text":"<ul> <li>GeoJSON file: A GeoJSON file that must contain the block groups' geometries and the FIPS codes for the state and counties.</li> </ul>"},{"location":"24sp-mobility-1/#returns_2","title":"Returns","text":"<ul> <li>CSV file: A new csv file is created, which contains columns from the geojson file as well as additional values collected for each block utilized in the IDI computation.</li> <li><code>Polygon</code>: the geometry of each block group</li> <li><code>Land_use_dict</code>: A dictionary for each block with key as the land use type and the value being the area occupied by the land type.</li> <li><code>Entropy</code>: The entropy of a block</li> <li><code>LDI</code>: The LDI value which is normalized  with the maximum LDI value for all the blocks.</li> </ul>"},{"location":"24sp-mobility-1/#workflow_2","title":"Workflow","text":"<ol> <li>Reading GeoJSON data: Extracts the geometry of polygons from a file.</li> <li>Land Use Data Extraction: OSMNX is used to extract Land use data for a specified block.</li> <li>Entropy Calculation: This is the first step of calculating LDI and the entropy is calculated for each block.</li> <li>Land Diversity Calculation: Calculates LDI per block by normalizing the entropies of all the blocks</li> <li>return file: generates a CSV with the data and LDI values required for creating visualizations in LDI_visualization.ipynb.</li> </ol>"},{"location":"24sp-mobility-1/#population-density-index-generator","title":"Population Density Index Generator","text":""},{"location":"24sp-mobility-1/#description_3","title":"Description","text":"<p>This function retrieves the population data for each block group within the given geographic areas from the U.S. Census Bureau's API and merges it with an existing GeoDataFrame containing block group geometries. The result includes added columns for population density and PDI (normalized population density relative to the maximum value in the dataset).</p>"},{"location":"24sp-mobility-1/#parameters_3","title":"Parameters","text":"<ul> <li>census_gdf (<code>GeoDataFrame</code>): A GeoDataFrame that must contain the block groups' geometries and the FIPS codes for the state and counties.</li> <li>census_api_key (<code>str</code>, optional): The API key for accessing the U.S. Census Bureau data. If not provided, the function will attempt to read it from a local file named <code>census_api_key.txt</code>. Census API keys may be generated at https://api.census.gov/data/key_signup.html.</li> </ul>"},{"location":"24sp-mobility-1/#returns_3","title":"Returns","text":"<ul> <li>GeoDataFrame: The original GeoDataFrame is returned with additional columns:</li> <li><code>POP</code>: Population of the block group.</li> <li><code>POPDENSITY</code>: Population density of the block group in persons per square kilometer.</li> <li><code>NORMPOPDENSITY</code>: Normalized population density scaled by the maximum population density across all block groups.</li> </ul>"},{"location":"24sp-mobility-1/#raises","title":"Raises","text":"<ul> <li>ValueError: If no API key is provided and it is also not found in the file <code>census_api_key.txt</code>, a <code>ValueError</code> is raised.</li> </ul>"},{"location":"24sp-mobility-1/#workflow_3","title":"Workflow","text":"<ol> <li>API Key Validation: Checks for the presence of an API key either directly through the parameter or within a local file.</li> <li>FIPS Code Extraction: Extracts the state and unique county FIPS codes from the GeoDataFrame.</li> <li>Census Data Retrieval: Uses the Census API to fetch population data for each block group in the specified counties and state.</li> <li>Data Integration: The fetched data is integrated into the original GeoDataFrame, converting population data to a usable format and creating new columns for population and population density.</li> <li>Population Density Calculation: Calculates the population density and normalized population density, adding these metrics to the GeoDataFrame.</li> <li>Data Cleaning: Cleans up the GeoDataFrame by removing unnecessary columns and ensuring proper indexing and geometry settings.</li> </ol>"},{"location":"24sp-mobility-2/","title":"Segregation in the 15-Minute City","text":""},{"location":"24sp-mobility-2/#introduction","title":"Introduction","text":"<p>This notebook focuses on the concept of the 15-minute city and investigates segregation on a basis of mobility. In this notebook, 15-minute usage is defined as the proportion of consumption-related trips made within a 15-minute walk from a home. 15-minute access is defined as the number of essential amenities within the 15-minute walk from a home. Segregation is examined within this context to measure and assess the distribution of amenities within urban areas.</p>"},{"location":"24sp-mobility-2/#notebook-summary","title":"Notebook Summary","text":"<p>This project includes procedures for loading, analyzing, processing, then modeling mobility and segregation density within a defined 15-minute city. The process includes: 1. Data loading and initial analyze. 2. Define 15-minute city parameters for given dataset. 3. Identifying data file tags to define residents, streets, amenities, and places of work. 4. Calculate routes between coordinates of residents and amenities through shortest path profile. 5. Project a grid of points to routes. 6. Estimate populations in provided buildings. 7. Interpret relations between routes and intersection density (segregation) with populations weighted. 8. Calculate and model final data normalized with heatmap through Grasshopper and Rhino.</p>"},{"location":"24sp-mobility-2/#usage","title":"Usage","text":"<p>The notebook is structured to be followed sequentially. Detailed comments and markdown notes provide guidance through each step of the analysis and modeling process.</p> <p></p>"},{"location":"24sp-mobility-2/#models-and-algorithms-used","title":"Models and Algorithms Used","text":"<ul> <li>Kernel Densities</li> <li>Space-Time Prisms</li> <li>Volumetric Population Estimation</li> <li>Vehicle Profile Routing (Itinero)</li> </ul>"},{"location":"24sp-mobility-2/#data-description","title":"Data Description","text":"<p>Densities for segregation are calculated and output through the heatmap weighted by population. In Rhino, the heatmap overlays a segment of data from OSM that will display darker blue for greater density and red for lower. Aggregated results can be generated through dataset and certain amenity types to compare the average encounter densities.</p>"},{"location":"24sp-mobility-2/#key-findings-and-observations","title":"Key Findings and Observations","text":"<ul> <li>Kernel densities allow for a simple calculation of segregation under the definition of interaction between pedestrians in a defined 15-minute city</li> <li>Volumetric Method with building area, building height, and census population provides general estimate for populations with data from https://opendata.atlantaregional.com/</li> <li>Potential for interaction is best calculated through space-time prisms which are more accurately representing spatial and temporal dynamics and constraints</li> <li>Increased local usage correlates with higher experienced segregation for low-income residents.</li> </ul>"},{"location":"24sp-mobility-2/#conclusions","title":"Conclusions","text":"<p>This notebook serves as a detailed example of using methods within provided data and activity spaces to calculate segregation values for a 15-minute city. The methodologies outlined here can be adapted and expanded for other types of assessment for pedestrian mobility and accessibility.</p>"},{"location":"24sp-mobility-2/#references","title":"References","text":"<ul> <li>Abbiasov, et al. (2024) The 15-minute city quantified using human mobility data.</li> <li>Patterson &amp; Farber (2015) Potential Path Areas and Activity Spaces in Application: A Review</li> <li>Sch\u00f6nfelder (2002) Measuring the size and structure of human activity spaces: The longitudinal perspective.</li> </ul>"},{"location":"24sp-mobility-2/#itinero","title":"Itinero","text":""},{"location":"24sp-mobility-2/#overview","title":"Overview","text":"<p>Itinero is a flexible open-source routing engine for a variety of transportation modes such as walking, cycling, and driving. It provides sophisticated tools to integrate customizable routing solutions into their applications, enabling efficient navigation. Itinero emphasizes versatility, offering support for various map data formats and allowing customization to suit specific needs. Most importantly, features like offline routing and routing across multiple transportation modes are provided. For the sake of this project, the pedestrian shortest path profile is utilized to calculate and map routes for individuals within the city.</p>"},{"location":"24sp-mobility-2/#repository","title":"Repository","text":"<p>Itinero Routing</p>"},{"location":"24sp-mobility-2/#features","title":"Features","text":"<ul> <li>Routing: The Router uses the RouterDb data to calculate routes for a given Profile. It starts and ends the Route at a RouterPoint.</li> <li>RouterDb: Contains the routing network, all meta-data, restrictions and so on.</li> <li>Profile: Defines vehicles and their behaviour.</li> <li>RouterPoint: A location on the routing network to use as a start or endpoint of a route.</li> <li>Router: The router is where you ask for routes.</li> <li>GeoJSON Conversion: Export calculated routing to GeoJSON for use in mapping and other geospatial applications.</li> <li>Open Street Maps Data Retrieval: Automatically download street and building data required for demand calculations.</li> </ul>"},{"location":"24sp-mobility-2/#getting-started","title":"Getting Started","text":"<p>To start using Itinero, follow these steps: 1. Install following Itinero packages to .NET project:     - Itinero: The Itinero routing core, this is usually the only package you need to install.     - Itinero.Geo: This package ensures compatibility with NTS.     -   Itinero.IO.Osm: This package contains code to load OSM data.     -   Itinero.IO.Shape: This package contains code to load data from shapefiles. 2. Specify OSM file as needed 3. Run project through determined routing coordinates</p>"},{"location":"24sp-mobility-2/#data-requirements","title":"Data Requirements","text":"<ul> <li>Street data should include both OSM or FEMA tag attributes for project defined amenities and places of work</li> <li>Open Street Maps (OSM): amenities and workplaces</li> <li>Federal Emergency Management Agency (FEMA): residentials</li> </ul>"},{"location":"24sp-mobility-2/#credits","title":"Credits","text":"<p>Itinero is open-source and commercially supported, developed by the Itinero BVBA team. Itinero was built using OpenStreetMap</p>"},{"location":"24sp-mobility-2/#future-work","title":"Future Work","text":"<ul> <li>Integrate temporal layer to find effective rates of encounter between pedestrians.</li> <li>Generate daily routines to represent more realistic behavior.</li> <li>Normalization of results to allow comparisons across sites with different total populations.</li> </ul>"}]}